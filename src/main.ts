import { NestFactory } from '@nestjs/core';
import { AppModule } from './app/app.module';
import { ValidationPipe } from '@nestjs/common';
import { DocumentBuilder, SwaggerModule } from '@nestjs/swagger';

async function bootstrap() {
  const app = await NestFactory.create(AppModule);

  app.useGlobalPipes(
    new ValidationPipe({
      whitelist: true, //remove chaves que nao estao no DTO
      forbidNonWhitelisted: true, //Retorna oque aconteceu
    }),
  );

  const configSwagger = new DocumentBuilder()
    .setTitle('Pok√©Verse API')
    .setDescription(
      `
       A **Pok√©Verse API** √© uma plataforma completa e escal√°vel desenvolvida com **NestJS + TypeORM + PostgreSQL**, 
    projetada para o **gerenciamento avan√ßado de Pok√©mons** e suas intera√ß√µes.

    üîπ Crie, liste, edite e exclua Pok√©mons com valida√ß√£o robusta.  
    üîπ Estrutura modular e preparada para expans√£o (treinadores, batalhas, regi√µes, etc.).  
    üîπ Integra√ß√£o com banco de dados relacional e documenta√ß√£o automatizada via Swagger.  

    Ideal para projetos de estudo, simula√ß√µes ou sistemas complexos inspirados no universo Pok√©mon.`,
    )
    .setVersion('1.0')
    .build();

  const document = SwaggerModule.createDocument(app, configSwagger);
  SwaggerModule.setup('api-docs', app, document);

  await app.listen(process.env.PORT ?? 3000);
}
bootstrap();
